// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sat.Recruitment.Infrastructure.Data;

#nullable disable

namespace Sat.Recruitment.Infrastructure.Migrations
{
    [DbContext(typeof(SatDbContext))]
    [Migration("20230322041057_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Sat.Recruitment.Domain.Entities.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<decimal>("Money")
                        .HasColumnType("TEXT")
                        .HasColumnName("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("userType");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "+5491154762312",
                            Email = "Juan@marmol.com",
                            Money = 1382.08m,
                            Name = "Juan",
                            Phone = "Peru 2464",
                            UserType = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Address = "+534645213542",
                            Email = "Franco.Perez@gmail.com",
                            Money = 336702m,
                            Name = "Franco",
                            Phone = "Alvear y Colombres",
                            UserType = "Premium"
                        },
                        new
                        {
                            Id = 3,
                            Address = "+534641213542",
                            Email = "Agustina@gmail.com",
                            Money = 134680.8m,
                            Name = "Agustina",
                            Phone = "Garay y Otra Calle",
                            UserType = "SuperUser"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
